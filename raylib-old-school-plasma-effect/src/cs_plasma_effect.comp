#version 460

// layout( binding = 0,rgba8) uniform coherent image2D u_image;
 layout( binding = 0,rgba8) uniform coherent image2D u_input_image;
 layout( binding = 1,rgba8) uniform coherent image2D u_output_image;

 

 layout(location = 3) uniform float time;
 layout(location = 4) uniform vec2 frequency;

 
float PI_2 = 6.28;
 
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main()
{

	ivec2 size = imageSize(u_input_image);
    ivec2 pixel_screen_coord = ivec2( gl_GlobalInvocationID.x,  gl_GlobalInvocationID.y);

	/*
	int pixel_size = 2;
	float xx = pixel_screen_coord.x ;
	xx/= pixel_size;
	float yy = pixel_screen_coord.y ;
	yy/=pixel_size;
	pixel_screen_coord =  ivec2(floor(xx) * pixel_size,  floor(yy) * pixel_size);
*/
	

	float period_x = 1./frequency.x;

	float Y = pixel_screen_coord.y/(size.y - 1.) *  period_x; // 

	vec4 inPixel = imageLoad(u_input_image, pixel_screen_coord);

	int x = int( pixel_screen_coord.x + 128 * (   cos( PI_2 * frequency.x* (time + Y) ) ) ) ; // sin(PI_2 * frequency.x * time - 0.01 * pixel_screen_coord.y) );

	int y = pixel_screen_coord.y;
	
	if ( x >= size.x)
	{
		x -= size.x;
	}
	else if ( x < 0) 
	{
	 	x = size.x + x;
	}
	
	imageStore(u_output_image, ivec2(x,y), inPixel);

}
 
 